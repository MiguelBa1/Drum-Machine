{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["audios","key","url","id","code","Display","props","text","DrumPad","playAudio","event","power","setText","target","firstElementChild","play","className","setTimeout","map","audio","onClick","src","App","useState","displayText","setPower","useEffect","handleKeyDown","elmt","document","getElementById","toUpperCase","parentNode","addEventListener","removeEventListener","style","background","type","min","max","onChange","elements","children","value","volume","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0c4b0879.chunk.js","sourcesContent":["import './App.css';\r\nimport React, { useEffect, useState } from 'react'\r\nconst audios = [\r\n  {\r\n    key: 'Q',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3',\r\n    id: 'Audio 1',\r\n    code: 81\r\n  },\r\n  {\r\n    key: 'W',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3',\r\n    id: 'Audio 2',\r\n    code: 87\r\n  },\r\n  {\r\n    key: 'E',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3',\r\n    id: 'Audio 3',\r\n    code: 69\r\n  },\r\n  {\r\n    key: 'A',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3',\r\n    id: 'Audio 4',\r\n    code: 65\r\n  },\r\n  {\r\n    key: 'S',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3', \r\n    id: 'Audio 5',\r\n    code: 83\r\n  },\r\n  {\r\n    key: 'D',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3', \r\n    id: 'Audio 6',\r\n    code: 68\r\n  },\r\n  {\r\n    key: 'Z',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3', \r\n    id: 'Audio 7',\r\n    code: 90\r\n  },\r\n  {\r\n    key: 'X',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3', \r\n    id: 'Audio 8',\r\n    code: 88\r\n  },\r\n  {\r\n    key: 'C',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3',\r\n    id: 'Audio 9',\r\n    code: 67\r\n  }\r\n]\r\n\r\nfunction Display(props) {\r\n  return (\r\n    <div id=\"display\">\r\n      {props.text}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction DrumPad(props) {\r\n  function playAudio(event) {\r\n    if (props.power) {\r\n      props.setText(event.target.id)\r\n      event.target.firstElementChild.play()\r\n      event.target.className = 'pulsed'\r\n      setTimeout(() => {\r\n        event.target.className = 'drum-pad'\r\n      }, 100)\r\n    }\r\n  }\r\n  const pads = audios.map((audio) => {\r\n    return (\r\n      <div className=\"drum-pad\" key={audio.key} id={audio.id} onClick={playAudio} >\r\n        {audio.key}\r\n        <audio src={audio.url} className=\"clip\" id={audio.key} ></audio>\r\n      </div>\r\n      )\r\n    }\r\n  )\r\n  return (pads)\r\n\r\n}\r\n\r\nfunction App() {\r\n  const [displayText, setText] = useState('Play!')\r\n  const [power, setPower] = useState(true)\r\n\r\n  const handlePower = (event) => {\r\n    if (power) {\r\n      event.target.style.background = '#CC0000'\r\n      setPower(false)\r\n    } else {\r\n      event.target.style.background = 'darkgreen'\r\n      setPower(true)\r\n    }\r\n  }\r\n\r\n  const handleVolume = (event) => {\r\n    const elements = document.getElementById('sounds-panel').children\r\n    setText('Volume: ' + event.target.value)\r\n    for (let obj of elements){\r\n      obj.firstElementChild.volume = event.target.value / 100\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = ((event) => {\r\n      const elmt = (document.getElementById(event.key.toUpperCase()))\r\n      if (elmt && power) {\r\n        setText(elmt.parentNode.id)\r\n        elmt.play()\r\n        elmt.parentNode.className = 'pulsed'\r\n        setTimeout(() => {\r\n          elmt.parentNode.className = 'drum-pad'\r\n        }, 100)\r\n      }\r\n    })\r\n    document.addEventListener('keydown', handleKeyDown) \r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown)\r\n    }\r\n  }, [power])\r\n\r\n  return (\r\n    <div id=\"drum-machine\" >\r\n      <div id=\"sounds-panel\">\r\n        <DrumPad power={power} setText={setText}/> \r\n      </div>\r\n      <div id=\"control-panel\">\r\n        <div>\r\n          <div>Power</div>\r\n          <div id=\"power\" onClick={handlePower}></div>\r\n        </div>\r\n        <Display text={displayText}/>\r\n        <div className=\"volume-control\">\r\n          <div>Volume</div>\r\n          <input type=\"range\" min=\"0\" max=\"100\" className=\"slider\" id=\"myRange\" onChange={handleVolume}></input>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n"],"sourceRoot":""}